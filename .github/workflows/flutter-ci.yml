name: Flutter CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: "3.35.3"

jobs:
  # Job 1: Code Quality Checks
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze code
        run: flutter analyze --no-fatal-infos

      - name: Check for TODO comments
        run: |
          if grep -r "TODO" lib/ --exclude-dir=.dart_tool; then
            echo "::warning::TODO comments found in code"
          fi

  # Job 2: Unit Tests
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: code-quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          fail_ci_if_error: false

      - name: Check test coverage
        run: |
          if [ -f coverage/lcov.info ]; then
            echo "Test coverage report generated successfully"
          fi

  # Job 3: Build iOS
  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: code-quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Install CocoaPods
        run: |
          gem install cocoapods
          cd ios && pod install

      - name: Build iOS (Debug, No Code Signing)
        run: flutter build ios --debug --no-codesign

      - name: Verify iOS build
        run: |
          if [ -d "build/ios/iphoneos/Runner.app" ]; then
            echo "iOS build successful"
            ls -la build/ios/iphoneos/
          else
            echo "iOS build failed"
            exit 1
          fi

  # Job 4: Build Android
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: code-quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android APK (Debug)
        run: flutter build apk --debug

      - name: Build Android App Bundle (Debug)
        run: flutter build appbundle --debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 5

      - name: Verify Android build
        run: |
          if [ -f "build/app/outputs/flutter-apk/app-debug.apk" ]; then
            echo "Android APK build successful"
            ls -lh build/app/outputs/flutter-apk/
          else
            echo "Android build failed"
            exit 1
          fi

  # Job 5: Build Web
  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: code-quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build web
        run: flutter build web --release

      - name: Upload web build artifact
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: build/web
          retention-days: 5

      - name: Verify web build
        run: |
          if [ -f "build/web/index.html" ]; then
            echo "Web build successful"
            ls -la build/web/
          else
            echo "Web build failed"
            exit 1
          fi

  # Job 6: Integration Test Readiness Check
  integration-test-check:
    name: Integration Test Readiness
    runs-on: ubuntu-latest
    needs: [test, build-ios, build-android]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for integration tests
        run: |
          if [ -d "integration_test" ]; then
            echo "✅ Integration test directory exists"
            ls -la integration_test/ || echo "Directory is empty"
          else
            echo "⚠️ Integration test directory not found (expected for Milestone 1)"
          fi

      - name: Check for Patrol configuration
        run: |
          if [ -f "patrol.yaml" ]; then
            echo "✅ Patrol configuration found"
          else
            echo "ℹ️ Patrol not configured yet (expected - Milestone 9)"
          fi

  # Summary Job
  ci-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    if: always()
    needs: [code-quality, test, build-ios, build-android, build-web, integration-test-check]

    steps:
      - name: CI Pipeline Summary
        run: |
          echo "## CI Pipeline Summary"
          echo "- Code Quality: ${{ needs.code-quality.result }}"
          echo "- Unit Tests: ${{ needs.test.result }}"
          echo "- iOS Build: ${{ needs.build-ios.result }}"
          echo "- Android Build: ${{ needs.build-android.result }}"
          echo "- Web Build: ${{ needs.build-web.result }}"
          echo "- Integration Test Check: ${{ needs.integration-test-check.result }}"

          if [ "${{ contains(needs.*.result, 'failure') }}" = "true" ]; then
            echo "❌ CI Pipeline failed"
            exit 1
          else
            echo "✅ CI Pipeline passed"
          fi